# Generated by Django 5.1 on 2025-05-21 09:13

import tinymce.models
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("larpmanager", "0012_alter_registrationticket_tier"),
    ]

    operations = [
        migrations.AlterField(
            model_name="character",
            name="preview",
            field=tinymce.models.HTMLField(
                blank=True,
                help_text="Preview visible only by the assigned player, when 'show preview' is checked",
                max_length=100000,
            ),
        ),
        migrations.AlterField(
            model_name="character",
            name="teaser",
            field=tinymce.models.HTMLField(
                blank=True,
                help_text="Presentation visible to all players, when 'show presentation' is checked",
                max_length=100000,
                verbose_name="Presentation",
            ),
        ),
        migrations.AlterField(
            model_name="faction",
            name="preview",
            field=tinymce.models.HTMLField(
                blank=True,
                help_text="Preview visible only by the assigned player, when 'show preview' is checked",
                max_length=100000,
            ),
        ),
        migrations.AlterField(
            model_name="faction",
            name="teaser",
            field=tinymce.models.HTMLField(
                blank=True,
                help_text="Presentation visible to all players, when 'show presentation' is checked",
                max_length=100000,
                verbose_name="Presentation",
            ),
        ),
        migrations.AlterField(
            model_name="handout",
            name="preview",
            field=tinymce.models.HTMLField(
                blank=True,
                help_text="Preview visible only by the assigned player, when 'show preview' is checked",
                max_length=100000,
            ),
        ),
        migrations.AlterField(
            model_name="handout",
            name="teaser",
            field=tinymce.models.HTMLField(
                blank=True,
                help_text="Presentation visible to all players, when 'show presentation' is checked",
                max_length=100000,
                verbose_name="Presentation",
            ),
        ),
        migrations.AlterField(
            model_name="plot",
            name="preview",
            field=tinymce.models.HTMLField(
                blank=True,
                help_text="Preview visible only by the assigned player, when 'show preview' is checked",
                max_length=100000,
            ),
        ),
        migrations.AlterField(
            model_name="plot",
            name="teaser",
            field=tinymce.models.HTMLField(
                blank=True,
                help_text="Presentation visible to all players, when 'show presentation' is checked",
                max_length=100000,
                verbose_name="Presentation",
            ),
        ),
        migrations.AlterField(
            model_name="prologue",
            name="preview",
            field=tinymce.models.HTMLField(
                blank=True,
                help_text="Preview visible only by the assigned player, when 'show preview' is checked",
                max_length=100000,
            ),
        ),
        migrations.AlterField(
            model_name="prologue",
            name="teaser",
            field=tinymce.models.HTMLField(
                blank=True,
                help_text="Presentation visible to all players, when 'show presentation' is checked",
                max_length=100000,
                verbose_name="Presentation",
            ),
        ),
        migrations.AlterField(
            model_name="prologuetype",
            name="preview",
            field=tinymce.models.HTMLField(
                blank=True,
                help_text="Preview visible only by the assigned player, when 'show preview' is checked",
                max_length=100000,
            ),
        ),
        migrations.AlterField(
            model_name="prologuetype",
            name="teaser",
            field=tinymce.models.HTMLField(
                blank=True,
                help_text="Presentation visible to all players, when 'show presentation' is checked",
                max_length=100000,
                verbose_name="Presentation",
            ),
        ),
        migrations.AlterField(
            model_name="quest",
            name="preview",
            field=tinymce.models.HTMLField(
                blank=True,
                help_text="Preview visible only by the assigned player, when 'show preview' is checked",
                max_length=100000,
            ),
        ),
        migrations.AlterField(
            model_name="quest",
            name="teaser",
            field=tinymce.models.HTMLField(
                blank=True,
                help_text="Presentation visible to all players, when 'show presentation' is checked",
                max_length=100000,
                verbose_name="Presentation",
            ),
        ),
        migrations.AlterField(
            model_name="questtype",
            name="preview",
            field=tinymce.models.HTMLField(
                blank=True,
                help_text="Preview visible only by the assigned player, when 'show preview' is checked",
                max_length=100000,
            ),
        ),
        migrations.AlterField(
            model_name="questtype",
            name="teaser",
            field=tinymce.models.HTMLField(
                blank=True,
                help_text="Presentation visible to all players, when 'show presentation' is checked",
                max_length=100000,
                verbose_name="Presentation",
            ),
        ),
        migrations.AlterField(
            model_name="registrationquestion",
            name="typ",
            field=models.CharField(
                choices=[
                    ("s", "Single choice"),
                    ("m", "Multiple choice"),
                    ("t", "Single-line text"),
                    ("p", "Multi-line text"),
                    ("e", "Advanced text editor"),
                    ("name", "Name"),
                    ("teaser", "Presentation"),
                    ("text", "Sheet"),
                    ("cover", "Cover"),
                    ("faction", "Factions"),
                    ("title", "Title"),
                    ("mirror", "Mirror"),
                    ("props", "Prop"),
                    ("hide", "Hide"),
                    ("progress", "Progress"),
                    ("assigned", "Assigned"),
                ],
                default="s",
                help_text="Question type",
                max_length=10,
                verbose_name="Type",
            ),
        ),
        migrations.AlterField(
            model_name="speedlarp",
            name="preview",
            field=tinymce.models.HTMLField(
                blank=True,
                help_text="Preview visible only by the assigned player, when 'show preview' is checked",
                max_length=100000,
            ),
        ),
        migrations.AlterField(
            model_name="speedlarp",
            name="teaser",
            field=tinymce.models.HTMLField(
                blank=True,
                help_text="Presentation visible to all players, when 'show presentation' is checked",
                max_length=100000,
                verbose_name="Presentation",
            ),
        ),
        migrations.AlterField(
            model_name="trait",
            name="preview",
            field=tinymce.models.HTMLField(
                blank=True,
                help_text="Preview visible only by the assigned player, when 'show preview' is checked",
                max_length=100000,
            ),
        ),
        migrations.AlterField(
            model_name="trait",
            name="teaser",
            field=tinymce.models.HTMLField(
                blank=True,
                help_text="Presentation visible to all players, when 'show presentation' is checked",
                max_length=100000,
                verbose_name="Presentation",
            ),
        ),
        migrations.AlterField(
            model_name="writinganswer",
            name="text",
            field=models.TextField(max_length=100000),
        ),
        migrations.AlterField(
            model_name="writingquestion",
            name="applicable",
            field=models.CharField(
                choices=[("c", "Character"), ("p", "Plot")],
                default="c",
                help_text="Select the types of writing elements that this question applies to.",
                max_length=1,
                verbose_name="Applicable",
            ),
        ),
        migrations.AlterField(
            model_name="writingquestion",
            name="typ",
            field=models.CharField(
                choices=[
                    ("s", "Single choice"),
                    ("m", "Multiple choice"),
                    ("t", "Single-line text"),
                    ("p", "Multi-line text"),
                    ("e", "Advanced text editor"),
                    ("name", "Name"),
                    ("teaser", "Presentation"),
                    ("text", "Sheet"),
                    ("cover", "Cover"),
                    ("faction", "Factions"),
                    ("title", "Title"),
                    ("mirror", "Mirror"),
                    ("props", "Prop"),
                    ("hide", "Hide"),
                    ("progress", "Progress"),
                    ("assigned", "Assigned"),
                ],
                default="s",
                help_text="Question type",
                max_length=10,
                verbose_name="Type",
            ),
        ),
        migrations.AlterField(
            model_name="writingoption",
            name="dependents",
            field=models.ManyToManyField(
                blank=True,
                help_text="Indicates other options that must be selected for this option to be selectable",
                related_name="dependents_inv",
                to="larpmanager.writingoption",
                verbose_name="Prerequisites",
            ),
        ),
    ]
